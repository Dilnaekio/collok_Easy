create database collok_easy;
use collok_easy;

create table `countries`(
	id_country int PRIMARY KEY AUTO_INCREMENT not null,
    name_country varchar(50) not null UNIQUE
);

create table `cities`(
	id_city int PRIMARY KEY AUTO_INCREMENT not null,
    name_city varchar(120) not null UNIQUE,
    cp_city varchar(25) not null,
    id_country int,
    FOREIGN KEY(id_country) REFERENCES `countries`(id_country)
);

create table `languages`(
	id_language int PRIMARY KEY AUTO_INCREMENT not null,
    name_language varchar(50) not null UNIQUE
);

create table `countries_languages`(
	id_country int,
    id_language int,
    PRIMARY KEY(id_country, id_language),
    FOREIGN KEY(id_country) REFERENCES `countries`(id_country),
    FOREIGN KEY(id_language) REFERENCES `languages`(id_language)
);

create table `postal_addresses`(
	id_postal_address int PRIMARY KEY not null AUTO_INCREMENT,
    street_name_address varchar(100) not null,
    street_number_address varchar(15) default null,
    place_address varchar(20) not null,
    floor_number_address varchar(10) default null,
    accommodation_number_address varchar(10) default null,
    id_city int,
    FOREIGN KEY(id_city) REFERENCES `cities`(id_city)
);

create table `housing_types`(
	id_housing_type int PRIMARY KEY not null AUTO_INCREMENT,
    name_housing_type varchar(50) default null
);

create table `ownships`(
	id_ownship int PRIMARY KEY not null AUTO_INCREMENT,
    name_ownship varchar(50) not null,
    owner_ownership varchar(50) default null
);

create table `accommodations`(
	id_accommodation int PRIMARY KEY not null AUTO_INCREMENT,
    name_accommodation varchar(50) not null,
    number_collokers_accommodation int default null,
    rent_amount_accommodation decimal default null,
    housing_area_accommodation varchar(20) default null,
    id_postal_address int,
id_housing_type int,
    FOREIGN KEY(id_postal_address) REFERENCES `postal_addresses`(id_postal_address),
FOREIGN KEY(id_housing_type) REFERENCES `housing_types`(id_housing_type)
);

create table `ownships_accommodations`(
	id_accommodation int,
    id_ownship int,
    PRIMARY KEY(id_accommodation, id_ownship),
    FOREIGN KEY(id_accommodation) REFERENCES `accommodations`(id_accommodation),
    FOREIGN KEY(id_ownship) REFERENCES `ownships`(id_ownship)
);

create table `rooms`(
	id_room int PRIMARY KEY not null AUTO_INCREMENT,
    name_room varchar(30) default null
);

create table `accommodations_rooms`(
	id_accommodation int,
    id_room int,
    PRIMARY KEY(id_accommodation, id_room),
    FOREIGN KEY(id_accommodation) REFERENCES `accommodations`(id_accommodation),
    FOREIGN KEY(id_room) REFERENCES `rooms`(id_room)
);

create table `markets`(
	id_market int PRIMARY KEY not null AUTO_INCREMENT,
    mail_market varchar(50) default null,
    phone_market varchar(25) default null
);

create table `postal_addresses_markets`(
	id_postal_address int,
    id_market int,
    PRIMARY KEY(id_postal_address, id_market),
    FOREIGN KEY(id_postal_address) REFERENCES `postal_addresses`(id_postal_address),
    FOREIGN KEY(id_market) REFERENCES `markets`(id_market)
);

create table `roles`(
	id_role int PRIMARY KEY not null AUTO_INCREMENT,
    name_role varchar(30) default null
);

create table `accounts`(
	id_account int PRIMARY KEY not null AUTO_INCREMENT,
    mail_password varchar(100) not null UNIQUE,
    password_account varchar(120) not null
);

create table `sex`(
	id_sex int PRIMARY KEY not null AUTO_INCREMENT,
    name_sex varchar(15) not null
);

create table `outgoings`(
	id_outgoing int PRIMARY KEY not null AUTO_INCREMENT,
    bugdet_outgoing decimal default null,
    final_expanse_outgoing decimal default null,
    difference_outgoing decimal default null,
    id_market int,
    FOREIGN KEY(id_market) REFERENCES `markets`(id_market)
);

create table `tasks`(
	id_task int PRIMARY KEY not null AUTO_INCREMENT,
    estimated_duration_task datetime default null,
    number_user_required_task int default null
);

create table `difficulties`(
	id_difficulty int PRIMARY KEY not null AUTO_INCREMENT,
    name_difficulty varchar(50) not null UNIQUE,
    description_difficulty varchar(300) not null UNIQUE,
    coefficient_difficulty float not null
);

create table `points`(
	id_point int PRIMARY KEY not null AUTO_INCREMENT,
    amount_point int not null,
    id_difficulty int,
    FOREIGN KEY(id_difficulty) REFERENCES `difficulties`(id_difficulty)
);

create table `priorities`(
	id_priority int PRIMARY KEY not null AUTO_INCREMENT,
    name_rank_priority varchar(30) not null UNIQUE 
);

create table `categories`(
	id_category int PRIMARY KEY not null AUTO_INCREMENT,
    name_category varchar(30) default null,
    description_category varchar(300) default null
);

create table `objectives`(
	id_objective int PRIMARY KEY not null AUTO_INCREMENT,
    name_objective varchar(60) not null,
   	description_objective varchar(300) default null,
    date_of_creation_objective datetime not null,
    deadline_objective datetime default null,
    requested_users_assignements_objective int default null,
    users_who_accepted_objective int default null,
    users_who_declined_objective int default null,
    delay_reminder_objective date default null,
    id_category int,
    id_priority int,
    id_point int,
    FOREIGN KEY(id_category) REFERENCES `categories`(id_category),
    FOREIGN KEY(id_priority) REFERENCES `priorities`(id_priority),
    FOREIGN KEY(id_point) REFERENCES `points`(id_point)
);

create table `objectives_status`(
	id_objective_status int PRIMARY KEY not null AUTO_INCREMENT,
    name_objective_status varchar(30) not null
);

create table `objectives_outgoings`(
	id_objective int,
    id_outgoing int,
    PRIMARY KEY(id_objective, id_outgoing),
    FOREIGN KEY(id_objective) REFERENCES `objectives`(id_objective),
    FOREIGN KEY(id_outgoing) REFERENCES `outgoings`(id_outgoing)
);

create table `objectives_tasks`(
	id_objective int,
    id_task int,
    PRIMARY KEY(id_objective, id_task),
    FOREIGN KEY(id_objective) REFERENCES `objectives`(id_objective),
    FOREIGN KEY(id_task) REFERENCES `tasks`(id_task)
);

create table `calendars`(
	id_calendar int PRIMARY KEY not null AUTO_INCREMENT,
	name_calendar varchar(50) not null,
    date_time_calendar datetime not null
);

create table `objectives_calendars`(
	id_objective int,
    id_calendar int,
    PRIMARY KEY(id_objective, id_calendar),
    FOREIGN KEY(id_objective) REFERENCES `objectives`(id_objective),
    FOREIGN KEY(id_calendar) REFERENCES `calendars`(id_calendar)
);

create table `reviews`(
	id_review int PRIMARY KEY not null AUTO_INCREMENT,
    rating_review int not null,
    content_review varchar(300) default null
);

create table `documents`(
	id_document int PRIMARY KEY not null AUTO_INCREMENT,
    name_document varchar(50) not null,
    content_document varchar(300) not null,
    date_upload_document date not null
);

create table `connections`(
	id_connection int PRIMARY KEY not null AUTO_INCREMENT,
    status_connection tinyint not null
);

create table `rewards`(
	id_reward int PRIMARY KEY not null AUTO_INCREMENT,
    name_reward varchar(30) not null,
    price_reward int not null
);

create table `wallets`(
	id_wallet int PRIMARY KEY not null AUTO_INCREMENT,
    points_available int default null
);

create table `wallets_rewards`(
	id_wallet int,
    id_reward int,
    PRIMARY KEY(id_wallet, id_reward),
    FOREIGN KEY(id_wallet) REFERENCES `wallets`(id_wallet),
    FOREIGN KEY(id_reward) REFERENCES `rewards` (id_reward)
);

create table `types_of_messages`(
	id_type_message int PRIMARY KEY not null AUTO_INCREMENT,
    name_type_message int not null
);

create table `messages`(
	id_message int PRIMARY KEY not null AUTO_INCREMENT,
    content_message varchar(240) default null,
    date_upload_message datetime not null,
    id_type_message int,
    FOREIGN KEY(id_type_message) REFERENCES `types_of_messages`(id_type_message)
);

create table `users`(
	id_user int PRIMARY KEY not null AUTO_INCREMENT,
    last_name_user varchar(50) not null,
    first_name_user varchar(50) not null,
    birthday_user date not null,
    phone_user varchar(25) default null,
    mobile_phone_user varchar(25) not null UNIQUE,
    alias_user varchar(30) default null UNIQUE,
    id_connection int,
    id_calendar int,
    id_account int,
    id_sex int,
    FOREIGN KEY(id_connection) REFERENCES `connections`(id_connection),
    FOREIGN KEY(id_calendar) REFERENCES `calendars`(id_calendar),
    FOREIGN KEY(id_account) REFERENCES `accounts`(id_account),
    FOREIGN KEY(id_sex) REFERENCES `sex`(id_sex)
);

create table `users_calendars`(
	id_user int,
    id_calendar int,
    PRIMARY KEY(id_user, id_calendar),
    FOREIGN KEY(id_user) REFERENCES `users`(id_user),
    FOREIGN KEY(id_calendar) REFERENCES `calendars`(id_calendar)
);

create table `users_roles`(
	id_user int,
    id_role int,
    PRIMARY KEY(id_user, id_role),
    FOREIGN KEY(id_user) REFERENCES `users`(id_user),
    FOREIGN KEY(id_role) REFERENCES `roles`(id_role)
);

create table `users_languages`(
	id_user int,
    id_language int,
    PRIMARY KEY(id_user, id_language),
    FOREIGN KEY(id_user) REFERENCES `users`(id_user),
    FOREIGN KEY(id_language) REFERENCES `languages`(id_language)
);

create table `users_accommodations`(
	id_user int,
    id_accommodation int,
    PRIMARY KEY(id_user, id_accommodation),
    FOREIGN KEY(id_user) REFERENCES `users`(id_user),
    FOREIGN KEY(id_accommodation) REFERENCES `accommodations`(id_accommodation)
);

create table `users_objectives`(
	id_user int,
    id_language int,
    id_objective int,
    PRIMARY KEY(id_user, id_language, id_objective),
    FOREIGN KEY(id_user) REFERENCES `users`(id_user),
    FOREIGN KEY(id_language) REFERENCES `languages`(id_language),
    FOREIGN KEY(id_objective) REFERENCES `objectives`(id_objective)
);

create table `users_reviews`(
	id_user int,
    id_review int,
    PRIMARY KEY(id_user, id_review),
    FOREIGN KEY(id_user) REFERENCES `users`(id_user),
    FOREIGN KEY(id_review) REFERENCES `reviews`(id_review)
);

create table `users_documents`(
    name_status_action varchar(20) not null,
	id_user int,
    id_document int,
    PRIMARY KEY(id_user, id_document),
    FOREIGN KEY(id_user) REFERENCES `users`(id_user),
    FOREIGN KEY(id_document) REFERENCES `documents`(id_document)
);

create table `users_rewards`(
    date_of_creation date not null,
    author_creation int,
	id_user int,
    id_reward int,
    PRIMARY KEY(id_user, id_reward),
    FOREIGN KEY(id_user) REFERENCES `users`(id_user),
    FOREIGN KEY(id_reward) REFERENCES `rewards`(id_reward)
);

create table `users_messages_send`(
	if_send tinyint not null,
    id_user int,
    id_message int,
    PRIMARY KEY (id_user, id_message),
    FOREIGN KEY(id_user) REFERENCES `users`(id_user),
    FOREIGN KEY(id_message) REFERENCES `messages`(id_message)
);

create table `users_messages_received`(
	if_read tinyint not null,
    id_user int,
    id_message int,
    PRIMARY KEY (id_user, id_message),
    FOREIGN KEY(id_user) REFERENCES `users`(id_user),
    FOREIGN KEY(id_message) REFERENCES `messages`(id_message)
);

create table `tracking`(
	id_tracking int PRIMARY KEY not null AUTO_INCREMENT,
    points_date_tracking datetime not null,
    points_movement_tracking int not null,
    id_user int,
   	FOREIGN KEY(id_user) REFERENCES `users`(id_user)
);

create table `tracking_wallets`(
    id_tracking int,
    id_wallet int,
    PRIMARY KEY (id_tracking, id_wallet),
    FOREIGN KEY(id_tracking) REFERENCES `tracking`(id_tracking),
    FOREIGN KEY(id_wallet) REFERENCES `wallets`(id_wallet)
);